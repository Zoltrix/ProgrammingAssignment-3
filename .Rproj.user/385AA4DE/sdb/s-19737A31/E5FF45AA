{
    "contents" : "rankall <- function(outcome, num = \"best\") {\n\t## Read outcome data\n\toutcomes <- read.csv(\"outcome-of-care-measures.csv\", \n\t\t\t     colClasses = \"character\")\n\t\n\t## Check that state and outcome are valid\n\t\n\t#validate input\n\tvalid.outcomes <- c(\"heart attack\", \"heart failure\", \"pneumonia\")\n\tif(!is.element(outcome, valid.outcomes)) \n\t\tstop(\"invalid outcome\")\n\t\n\t# Determine the col index\n\tindex <- if(outcome == \"heart attack\")\n\t\t11\n\telse if (outcome == \"heart failure\")\n\t\t17\n\telse    23\n\t\n\t# Remove NA's\n\toutcomes[, index] <- as.numeric(outcomes[, index])\n\toutcomes <- outcomes[!is.na(outcomes[, index]), ]\n\t\n\t\n\t# Find all the outcomes for a given state\n\toutcomes.bystate <- split(outcomes, outcomes$State)\n\t\n\t# Sort each of the outcomes for a given state and select the targeted\n\t# hospital by rank\n\tsorted.outcomes  <- sapply(outcomes.bystate, function(x) {\n\t\tx <- x[order(x[, index], x$Hospital.Name), ]\n\t\tif (num == \"best\") {\n\t\t\tx[1, \"Hospital.Name\"]\n\t\t} else if (num == \"worst\") {\n\t\t\tx[nrow(x), \"Hospital.Name\"]\n\t\t} else {\n\t\t\tif (num > nrow(x))\n\t\t\t\tNA\n\t\t\telse\n\t\t\t\tx[num, \"Hospital.Name\"]\n\t\t}\n\t})\n\t\n\t# formulate the result into a data frame as required\n\tresult <- data.frame(hospital = sorted.outcomes)\n\tresult$hospital <- as.character(result$hospital)\n\tresult$state    <- rownames(result)\n\t\n\tresult\n}",
    "created" : 1406071087835.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "608855862",
    "id" : "E5FF45AA",
    "lastKnownWriteTime" : 1406076013,
    "path" : "C:/Users/haron pc/Programming Assignment 3 - Hospital Quality/rankall.R",
    "project_path" : "rankall.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}